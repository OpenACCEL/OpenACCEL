n=slider(1,1,20)
// this tells how many time steps back we want to retrieve the history 
p=slider(1,0,100) 
// this is in interactively entered value
pr=descartes(pk) 
// plot the stuff
k=vSegment(vConcat(p,k{1}),0,n) 
// this is the heart of it. We take the previous value of the array k,
// and prepend it with some new value, p. This is done by the vConcat function.
// Next, the segment is taken starting from location 0 (=the
// recently prepended value p), with length n.
// The segment function is such that, irrespective of the length
// of its argument vector, you always get a vector with
// length (second argument) back - if necessary,
// it is completed with zeroes.
pk=#(i,vSequence(0,n-1),plotLine(k[i]+2*i),vAppend) 
// this assembles a number of graphs into one array, pk,
// serving as an argument for descartes. Every element in the
// string is a single graph.
// This graph consists of a single location and
// an edge-property that is empty. The former
// uses the shift-mechanism to get a single y-coordinate
// into a full history of y-coordinates; the latter
// triggers the default mechanism, producing a full sequence of
// edges. 
plotLine(yVal)=[locations:[x:[mode:'intp'],y:[mode:'shift',value:yVal]],edges:[]]
string=[plotType:'line',x:[mode:'intp'],y:[mode:'shift',ref:1]] 
// the plot instruction
t=t{1}+1
// time