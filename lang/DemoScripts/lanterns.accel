 
dL=slider(25.5,15,50)
    //  how far are the lanterns removed from each other 
h=slider(5.5,3,30)
    //  how high are the lanterns 
p=slider(500.1,100,2000)
    //  what is the power per lantern 
a=plot([[[scaleX:2,scaleY:2,plotType:'image',mapR:[mode:'data',ref:1],mapG:[mode:'data',ref:1],mapB:[mode:'data',ref:2]],lfG,cons]])
    //  plotting: red and green together give the light distribution. The blue channel indicates if the constraints are satisfied 
intPenalty=paretoMin(paretoHor(-min(minP,minInt)+max(maxP,maxInt)-(maxP-minP)))
    //  the intensity penalty is 0 if the maximal intensity is not larger than maxP and the minimal intensity is not less than minP 
rMaxInt=maxInt
    //  report the max intensity 
rMinInt=minInt
    //  report the min intensity 
totPow=paretoMin(paretoVer(p*nLanterns))
    //  calculate the total power for this length of road 
maxP=150
    //  the maximal intensity so that no blinding occurs 
minP=10
    //  the minimal intensity so that everything is at least marginally visible 
roadLength=40
    //  the length of road we consider 
roadWidth=15
    //  the width of the road 
cons=if(lfG<minP,0,if(lfG>maxP,255,128))
    //  calculate the constraint map: 128 if both constraints are satisfied;
    //  0 if too dark
    //  255 if too light 
Wh=roadWidth/2
    //  how far from the side of the road are the lanterns positioned 
lfG=#(w,vSequence(0,roadWidth),lumOneSlice(w),vAppend)
    //  calculate the light distribution over the entire road 
lum(w,l,n)=p/(h*h+pow(abs(l-n*dL),2)+pow(abs(w-Wh),2))
    //  this calculates the contribution of one lantern (number n) to location (w,l) 
lumAllLant(w,l)=#(n,vSequence(-1,nLanterns),lum(w,l,n),add)
    //  this adds the illumination of all lanterns on one piece (l,w) of the road 
lumOneSlice(w)=#(l,vSequence(0,roadLength),lumAllLant(w,l),vAppend)
    //  this is the contribution over one slice of the road 
maxInt=#(m3,vDom(lfG),#(m4,vDom(@(lfG,m3)),lfG[m3][m4],max),max)
    //  calculate the max intensity over the entire road 
minInt=#(m1,vDom(lfG),#(m2,vDom(@(lfG,m1)),lfG[m1][m2],min),min)
    //  calculate the min intensity over the entire road 
nLanterns=1+roadLength/dL
    //  the number of lanters is the length of the road divided by the distance between lanterns
    // [['n':'dL','x':13.6,'y':86.3],['n':'h','x':18.7,'y':93.7],['n':'p','x':24,'y':93.6],['n':'a','x':93.4,'y':60.7],['n':'lfG','x':60,'y':33.5],['n':'cons','x':67.8,'y':57.2],['n':'intPenalty','x':94.5,'y':31.7],['n':'minP','x':20.5,'y':5.3],['n':'minInt','x':67.5,'y':34.7],['n':'maxP','x':11.5,'y':12.8],['n':'maxInt','x':72.9,'y':39.7],['n':'rMaxInt','x':94,'y':51.8],['n':'rMinInt','x':94.2,'y':43.8],['n':'totPow','x':89.1,'y':68.8],['n':'nLanterns','x':37.4,'y':47.8],['n':'roadLength','x':8.2,'y':26.2],['n':'roadWidth','x':8.7,'y':18.7],['n':'Wh','x':30.9,'y':32.2],['n':'lumOneSlice','x':54.8,'y':39.1],['n':'lum','x':47,'y':47.5],['n':'lumAllLant','x':50.4,'y':41.5]]