phi=slider(0,-0.1,0.1)
// the angle phi as controlled by the user
phiShow=check(false)
showphi=cond(phiShow,phi,-1)
    //  if the graph should be shown, showPhi equals the value of phi 
    resetTime=button()
time=cond(resetTime,0,time{1}+1)
    //  resetting the time and incrementing the time 
plotStick=[[plotType:'line',x:[mode:'data',ref:1],y:[mode:'data',ref:2]],[x1,x2],[y1,y2]]
    // this represents the tilting stick (actually a slide)
plotPhi=[[plotType:'line',x:[mode:'intp'],y:[mode:'shift',ref:1],width:3,col_b:255,col_r:0],50+50*[showphi]]
    // this represents the angle phi as a function of time
plotBall=[[plotType:'bubble',x:[mode:'shift',ref:1],y:[mode:'shift',ref:2],diameter:[mode:'data',ref:3]],[rx],[ry],[d]]
    // this is the rolling ball
plotResult=plot([plotPhi,plotStick,plotBall])
    //  three graphs:
    //  the green line segment representing the stick,
    //  the big green bubble representing the ball,
    //  the blue curve: the variation of phi 
Rmax=40
    //  determines the length of the stick 
d=10
    //  the diameter of the ball 
g=0.2 
x0=50
    //  the hinge, x-coordinate 
y0=40
    //  the hinge, y-coordinate 
cphi=cos(phi)
    //  so we don't have to calculate the cos every time 
gpar=-g*sphi
    //  the parallel component of gravity 
rpar=cond(time>1,rpar{1}+vpar,0)
    //  the parallel displacement: integrate over the parallel velocity 
rx=x0+d*sphi/2+rpar*cphi
    //  the x-coordinate of the ball 
ry=y0+d*cphi/2+rpar*sphi
    //  the y-coordinate of the ball 
sphi=sin(phi)
    //  so we don't have to calculate the sine every time over again 
vpar=cond(time>1,vpar{1}+gpar,0)
    //  the parallel component of the velocity: integrating the acceleration 
x1=x0+Rmax*cphi
    //  x coordinate of one end point of the stick 
x2=x0-Rmax*cphi
    //  x coordinate of other end point of the stick 
y1=y0+Rmax*sphi
    //  y coordinate of one end point of the stick 
y2=y0-Rmax*sphi
    //  y coordinate of other end point of the stick