DS=slider(50,10,100)
// this is the resolution of the playground. Notice: the number of pixels to be calculated grows quadratically with DS!
a=plot([[[plotType:'image',scaleX:round(scal),scaleY:round(scal),mapR:[mode:'data',ref:1],mapG:[mode:'data',ref:2],mapB:[mode:'data',ref:3]],mR,mG,mB]])
// a scalable image with variable pixels size 
scal=slider(1,1,10) 
// the pixel size
blur=[[1,2,1],[2,7,2],[1,2,1]]/19 
// the blur kernel: the integral is just little less than 1
mB=if(p<2 || DS!=DS{1},start,iConvolve(mB{1}+20000*(random()-0.5)*iSpike(DS*random(),DS*random(),DS,DS),blur,1,1,2)) 
// a diffusion operator on the blue channel
mG=if(p<2 || DS!=DS{1},start,iConvolve(mG{1}+20000*(random()-0.5)*iSpike(DS*random(),DS*random(),DS,DS),blur,1,1,2)) 
// a diffusion operator on the green channel
mR=if(p<2 || DS!=DS{1},start,iConvolve(mR{1}+20000*(random()-0.5)*iSpike(DS*random(),DS*random(),DS,DS),blur,1,1,2)) 
// a diffusion operator on the red channel
p=p{1}+1 
// the timer
start=if(p<2 || DS{1}!=DS ,iMake(128,DS,DS),start{1})
// to start things off