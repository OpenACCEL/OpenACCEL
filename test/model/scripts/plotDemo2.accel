a=plot([graph1,graph2,graph3]) 
// This illustrates the idea of Brownian motion: random perturbations
// to a smoothly varying signal. The changes in the signal come about
// by integration (accumulation) over time of the rendaom perturbations.
// In this case there are 18 independent signals,
// used to produce three streams of bubbles. In each stream the 
// Brownian motion controls the diameter of the bubbles, the opacity
// the x-location and the three colour channels.
freeze=check(false)
// If the checkbox 'freeze'is checked, the random perturbations
// are not added to the signals. 
rBrown1=if(freeze,rBrown1{1},max(2,min(255,rBrown1{1}+f2*(random()*10-5))))
rBrown2=if(freeze,rBrown2{1},max(2,min(255,rBrown2{1}+f2*(random()*10-5))))
rBrown3=if(freeze,rBrown3{1},max(2,min(255,rBrown3{1}+f2*(random()*10-5))))
gBrown1=if(freeze,gBrown1{1},max(2,min(255,gBrown1{1}+f2*(random()*10-5))))
gBrown2=if(freeze,gBrown2{1},max(2,min(255,gBrown2{1}+f2*(random()*10-5))))
gBrown3=if(freeze,gBrown3{1},max(2,min(255,gBrown3{1}+f2*(random()*10-5))))
bBrown1=if(freeze,bBrown1{1},max(2,min(255,bBrown1{1}+f2*(random()*10-5))))
bBrown2=if(freeze,bBrown2{1},max(2,min(255,bBrown2{1}+f2*(random()*10-5))))
bBrown3=if(freeze,bBrown3{1},max(2,min(255,bBrown3{1}+f2*(random()*10-5)))) 
aBrown1=if(freeze,aBrown1{1},max(2,min(255,aBrown1{1}+f2*(random()*10-5))))
aBrown2=if(freeze,aBrown2{1},max(2,min(255,aBrown2{1}+f2*(random()*10-5)))) 
aBrown3=if(freeze,aBrown3{1},max(2,min(255,aBrown3{1}+f2*(random()*10-5))))
dBrown1=if(freeze,dBrown1{1},max(1,min(15,dBrown1{1}+f2*(random()*10-5))))
dBrown2=if(freeze,dBrown2{1},max(1,min(15,dBrown2{1}+f2*(random()*10-5))))
dBrown3=if(freeze,dBrown3{1},max(1,min(15,dBrown3{1}+f2*(random()*10-5)))) 
xBrown1=if(freeze,xBrown1{1},max(2,min(100,xBrown1{1}+f2*(random()*10-5))))
xBrown2=if(freeze,xBrown2{1},max(2,min(100,xBrown2{1}+f2*(random()*10-5))))
xBrown3=if(freeze,xBrown3{1},max(2,min(100,xBrown3{1}+f2*(random()*10-5))))
ctrl1=[plotType:'bubble',nPoints:30,x:[mode:'shift',ref:1],y:[mode:'intp'],diameter:[mode:'shift',ref:2],col_r:[mode:'shift',ref:3],col_g:[mode:'shift',ref:4],col_b:[mode:'shift',ref:5],col_a:[mode:'shift',ref:6]]
ctrl2=[plotType:'bubble',nPoints:50,x:[mode:'shift',ref:1],y:[mode:'intp'],diameter:[mode:'shift',ref:2],col_r:[mode:'shift',ref:3],col_g:[mode:'shift',ref:4],col_b:[mode:'shift',ref:5],col_a:[mode:'shift',ref:6]]
ctrl3=[plotType:'bubble',nPoints:70,x:[mode:'shift',ref:1],y:[mode:'intp'],diameter:[mode:'shift',ref:2],col_r:[mode:'shift',ref:3],col_g:[mode:'shift',ref:4],col_b:[mode:'shift',ref:5],col_a:[mode:'shift',ref:6]]
graph1=[ctrl1,[xBrown1],[dBrown1*3],[rBrown1],[gBrown1],[bBrown1],[aBrown1/255]] 
graph2=[ctrl2,[xBrown2],[dBrown2*3],[rBrown2],[gBrown2],[bBrown2],[aBrown2/255]] 
graph3=[ctrl3,[xBrown3],[dBrown3*3],[rBrown3],[gBrown3],[bBrown3],[aBrown3/255]] 
f2=slider(0.50,0,5)
// controls the effect of the random perturbations: each works via
// an IIR-filter (infinite impulse response filter); f2 is the ratio
// between the original value and the contribution of the new value.